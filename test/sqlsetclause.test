package require tcltest
package require -exact gen 1.10.2
source gen-test-common.tcl

namespace eval SqlSetClauseTest {}



proc SqlSetClauseTest::Test-1 {} {

::tcltest::test SqlSetClause-0 {Basic test}  -constraints {[expr [CheckAllDependenciesLoaded SqlSetClause]]}  -setup {sqlite3 testdb test.db
}  -body {SqlSetClause [dict create intvalue 1 realvalue 1.1]
}  -cleanup {}  -result {intvalue = 1, realvalue = 1.1}  -output {}  -returnCodes {0}  

}



proc SqlSetClauseTest::Test-2 {} {

::tcltest::test SqlSetClause-1 {Empty dict}  -constraints {[expr [CheckAllDependenciesLoaded SqlSetClause]]}  -setup {}  -body {SqlSetClause {}
}  -cleanup {}  -result {Variable DictValue has empty value.}  -output {}  -returnCodes {1}  

}



proc SqlSetClauseTest::Test-3 {} {

::tcltest::test SqlSetClause-2 {Only one name / value pair}  -constraints {[expr [CheckAllDependenciesLoaded SqlSetClause]]}  -setup {}  -body {SqlSetClause [dict create intvalue 1]
}  -cleanup {}  -result {intvalue = 1}  -output {}  -returnCodes {0}  

}



if {([llength $::argv] == 0) || ([lindex $::argv 0] ne "target")} {
     SqlSetClauseTest::Test-1
     SqlSetClauseTest::Test-2
     SqlSetClauseTest::Test-3
} else {
     foreach Element [lrange $::argv 1 end] {
          SqlSetClauseTest::Test-[set Element]
     }
}

