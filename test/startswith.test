package require tcltest
package require -exact gen 1.7.0

namespace eval StartsWithTest {}



proc StartsWithTest::Test-1 {} {

::tcltest::test StartsWith-0 {Basic test - return 1}  -constraints {}  -setup {}  -body {StartsWith asdf as
}  -cleanup {}  -result {1}  -output {}  -returnCodes {0}  

}



proc StartsWithTest::Test-2 {} {

::tcltest::test StartsWith-1 {Basic test - return 0}  -constraints {}  -setup {}  -body {StartsWith asdf df}  -cleanup {}  -result {0}  -output {}  -returnCodes {0}  

}



proc StartsWithTest::Test-3 {} {

::tcltest::test StartsWith-2 {Empty target string}  -constraints {}  -setup {}  -body {StartsWith "" asdf}  -cleanup {}  -result {0}  -output {}  -returnCodes {0}  

}



proc StartsWithTest::Test-4 {} {

::tcltest::test StartsWith-3 {Empty search string}  -constraints {}  -setup {}  -body {StartsWith asdf ""}  -cleanup {}  -result {0}  -output {}  -returnCodes {0}  

}



proc StartsWithTest::Test-5 {} {

::tcltest::test StartsWith-4 {Search string bigger than target string}  -constraints {}  -setup {}  -body {StartsWith asd asdf}  -cleanup {}  -result {0}  -output {}  -returnCodes {0}  

}



if {([llength $argv] == 0) || ([lindex $argv 0] ne "target")} {
     StartsWithTest::Test-1
     StartsWithTest::Test-2
     StartsWithTest::Test-3
     StartsWithTest::Test-4
     StartsWithTest::Test-5
} else {
     foreach Element [lrange $argv 1 end] {
          StartsWithTest::Test-[set Element]
     }
}

