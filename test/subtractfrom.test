package require tcltest
package require -exact gen 1.15.0
source gen-test-common.tcl

namespace eval SubtractFromTest {}



proc SubtractFromTest::Test-1 {} {

::tcltest::test SubtractFrom-0 {Basic test}  -constraints {[expr [CheckAllDependenciesLoaded SubtractFrom]]}  -setup {}  -body {set SomeNumber 111
SubtractFrom SomeNumber 11
puts $SomeNumber}  -cleanup {}  -result {}  -output {100
}  -returnCodes {0}  

}



proc SubtractFromTest::Test-2 {} {

::tcltest::test SubtractFrom-1 {No such variable}  -constraints {[expr [CheckAllDependenciesLoaded SubtractFrom]]}  -setup {}  -body {unset -nocomplain NoVariable
SubtractFrom NoVariable 1}  -cleanup {}  -result {-1}  -output {}  -returnCodes {0}  

}



proc SubtractFromTest::Test-3 {} {

::tcltest::test SubtractFrom-2 {Empty string input}  -constraints {[expr [CheckAllDependenciesLoaded SubtractFrom]]}  -setup {}  -body {SubtractFrom "" 123}  -cleanup {}  -result {Variable name is missing. Got empty string.}  -output {}  -returnCodes {1}  

}



proc SubtractFromTest::Test-4 {} {

::tcltest::test SubtractFrom-3 {Empty string input 2}  -constraints {[expr [CheckAllDependenciesLoaded SubtractFrom]]}  -setup {}  -body {set SomeNumber 111
SubtractFrom SomeNumber ""}  -cleanup {}  -result {Got input value . Expected numeric value.}  -output {}  -returnCodes {1}  

}



proc SubtractFromTest::Test-5 {} {

::tcltest::test SubtractFrom-4 {Non-numeric value input}  -constraints {[expr [CheckAllDependenciesLoaded SubtractFrom]]}  -setup {}  -body {set SomeNumber 111
SubtractFrom SomeNumber asdf}  -cleanup {}  -result {Got input value asdf. Expected numeric value.}  -output {}  -returnCodes {1}  

}



if {([llength $::argv] == 0) || ([lindex $::argv 0] ne "target")} {
     SubtractFromTest::Test-1
     SubtractFromTest::Test-2
     SubtractFromTest::Test-3
     SubtractFromTest::Test-4
     SubtractFromTest::Test-5
} else {
     foreach Element [lrange $::argv 1 end] {
          SubtractFromTest::Test-[set Element]
     }
}

