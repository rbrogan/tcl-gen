package require tcltest
package require -exact gen 1.9.0

namespace eval IsNonZeroTest {}



proc IsNonZeroTest::Test-1 {} {

::tcltest::test IsNonZero-0 {Basic test - return 1}  -constraints {}  -setup {}  -body {IsNonZero 1
}  -cleanup {}  -result {1}  -output {}  -returnCodes {0}  

}



proc IsNonZeroTest::Test-2 {} {

::tcltest::test IsNonZero-1 {Basic test - return 0}  -constraints {}  -setup {}  -body {IsNonZero 0
}  -cleanup {}  -result {0}  -output {}  -returnCodes {0}  

}



proc IsNonZeroTest::Test-3 {} {

::tcltest::test IsNonZero-2 {Non-numeric input}  -constraints {}  -setup {}  -body {IsNonZero asdf}  -cleanup {}  -result {Got input value asdf. Expected numeric value.}  -output {}  -returnCodes {1}  

}



proc IsNonZeroTest::Test-4 {} {

::tcltest::test IsNonZero-3 {Empty string input}  -constraints {}  -setup {}  -body {IsNonZero ""}  -cleanup {}  -result {Got input value . Expected numeric value.}  -output {}  -returnCodes {1}  

}



if {([llength $::argv] == 0) || ([lindex $::argv 0] ne "target")} {
     IsNonZeroTest::Test-1
     IsNonZeroTest::Test-2
     IsNonZeroTest::Test-3
     IsNonZeroTest::Test-4
} else {
     foreach Element [lrange $::argv 1 end] {
          IsNonZeroTest::Test-[set Element]
     }
}

