package require tcltest
package require -exact gen 1.9.0

namespace eval SwapTest {}



proc SwapTest::Test-1 {} {

::tcltest::test Swap-0 {Basic test}  -constraints {}  -setup {}  -body {set X 111
set Y 222
Swap X Y
puts "X = $X, Y = $Y"
}  -cleanup {}  -result {}  -output {X = 222, Y = 111
}  -returnCodes {0}  

}



proc SwapTest::Test-2 {} {

::tcltest::test Swap-1 {First does not exist}  -constraints {}  -setup {}  -body {unset -nocomplain NoSuchVar
set Second 2
Swap NoSuchVar Second
puts $NoSuchVar
puts $Second
}  -cleanup {}  -result {}  -output {2

}  -returnCodes {0}  

}



proc SwapTest::Test-3 {} {

::tcltest::test Swap-2 {Second does not exist}  -constraints {}  -setup {}  -body {set First 1
unset -nocomplain NoSuchVar
Swap First NoSuchVar
puts $First
puts $NoSuchVar
}  -cleanup {}  -result {}  -output {
1
}  -returnCodes {0}  

}



proc SwapTest::Test-4 {} {

::tcltest::test Swap-3 {First empty}  -constraints {}  -setup {}  -body {set First ""
set Second 2
Swap First Second
puts $First
puts $Second
}  -cleanup {}  -result {}  -output {2

}  -returnCodes {0}  

}



proc SwapTest::Test-5 {} {

::tcltest::test Swap-4 {Second empty}  -constraints {}  -setup {}  -body {set First 1
set Second ""
Swap First Second
puts $First
puts $Second
}  -cleanup {}  -result {}  -output {
1
}  -returnCodes {0}  

}



if {([llength $::argv] == 0) || ([lindex $::argv 0] ne "target")} {
     SwapTest::Test-1
     SwapTest::Test-2
     SwapTest::Test-3
     SwapTest::Test-4
     SwapTest::Test-5
} else {
     foreach Element [lrange $::argv 1 end] {
          SwapTest::Test-[set Element]
     }
}

