package require tcltest
package require -exact gen 1.12.1
source gen-test-common.tcl

namespace eval StringMidTest {}



proc StringMidTest::Test-1 {} {

::tcltest::test StringMid-0 {Basic test - no count specified}  -constraints {[expr [CheckAllDependenciesLoaded StringMid]]}  -setup {}  -body {StringMid "one two three" 8}  -cleanup {}  -result {three}  -output {}  -returnCodes {0}  

}



proc StringMidTest::Test-2 {} {

::tcltest::test StringMid-1 {Basic test - count specified}  -constraints {[expr [CheckAllDependenciesLoaded StringMid]]}  -setup {}  -body {StringMid "aaabbb" 3 2}  -cleanup {}  -result {bb}  -output {}  -returnCodes {0}  

}



proc StringMidTest::Test-3 {} {

::tcltest::test StringMid-2 {Count greater than string length}  -constraints {[expr [CheckAllDependenciesLoaded StringMid]]}  -setup {}  -body {StringMid asdf 0 10}  -cleanup {}  -result {asdf}  -output {}  -returnCodes {0}  

}



proc StringMidTest::Test-4 {} {

::tcltest::test StringMid-3 {Position not in range}  -constraints {[expr [CheckAllDependenciesLoaded StringMid]]}  -setup {}  -body {StringMid asdf 5}  -cleanup {}  -result {}  -output {}  -returnCodes {0}  

}



proc StringMidTest::Test-5 {} {

::tcltest::test StringMid-4 {Empty string input}  -constraints {[expr [CheckAllDependenciesLoaded StringMid]]}  -setup {}  -body {StringMid "" 0 1}  -cleanup {}  -result {}  -output {}  -returnCodes {0}  

}



proc StringMidTest::Test-6 {} {

::tcltest::test StringMid-5 {Position below zero}  -constraints {[expr [CheckAllDependenciesLoaded StringMid]]}  -setup {}  -body {StringMid asdf -1 1}  -cleanup {}  -result {a}  -output {}  -returnCodes {0}  

}



proc StringMidTest::Test-7 {} {

::tcltest::test StringMid-6 {Count is non-numeric value}  -constraints {[expr [CheckAllDependenciesLoaded StringMid]]}  -setup {}  -body {StringMid "aaabbb" 3 asdf}  -cleanup {}  -result {Got input value asdf. Expected numeric value.}  -output {}  -returnCodes {1}  

}



proc StringMidTest::Test-8 {} {

::tcltest::test StringMid-7 {Count is non-positive value}  -constraints {[expr [CheckAllDependenciesLoaded StringMid]]}  -setup {}  -body {StringMid "aaabbb" 3 0}  -cleanup {}  -result {Expected positive input value, got input value 0 instead.}  -output {}  -returnCodes {1}  

}



if {([llength $::argv] == 0) || ([lindex $::argv 0] ne "target")} {
     StringMidTest::Test-1
     StringMidTest::Test-2
     StringMidTest::Test-3
     StringMidTest::Test-4
     StringMidTest::Test-5
     StringMidTest::Test-6
     StringMidTest::Test-7
     StringMidTest::Test-8
} else {
     foreach Element [lrange $::argv 1 end] {
          StringMidTest::Test-[set Element]
     }
}

