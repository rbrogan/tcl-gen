package require tcltest
package require -exact gen 1.15.0
source gen-test-common.tcl

namespace eval IsPositiveTest {}



proc IsPositiveTest::Test-1 {} {

::tcltest::test IsPositive-0 {Basic test - return 1}  -constraints {[expr [CheckAllDependenciesLoaded IsPositive]]}  -setup {}  -body {IsPositive 1.1}  -cleanup {}  -result {1}  -output {}  -returnCodes {0}  

}



proc IsPositiveTest::Test-2 {} {

::tcltest::test IsPositive-1 {Basic test - return 0}  -constraints {[expr [CheckAllDependenciesLoaded IsPositive]]}  -setup {}  -body {IsPositive 0}  -cleanup {}  -result {0}  -output {}  -returnCodes {0}  

}



proc IsPositiveTest::Test-3 {} {

::tcltest::test IsPositive-2 {Non-numeric input}  -constraints {[expr [CheckAllDependenciesLoaded IsPositive]]}  -setup {}  -body {IsPositive asdf}  -cleanup {}  -result {Got input value asdf. Expected numeric value.}  -output {}  -returnCodes {1}  

}



proc IsPositiveTest::Test-4 {} {

::tcltest::test IsPositive-3 {Empty string input}  -constraints {[expr [CheckAllDependenciesLoaded IsPositive]]}  -setup {}  -body {IsPositive ""}  -cleanup {}  -result {Got input value . Expected numeric value.}  -output {}  -returnCodes {1}  

}



if {([llength $::argv] == 0) || ([lindex $::argv 0] ne "target")} {
     IsPositiveTest::Test-1
     IsPositiveTest::Test-2
     IsPositiveTest::Test-3
     IsPositiveTest::Test-4
} else {
     foreach Element [lrange $::argv 1 end] {
          IsPositiveTest::Test-[set Element]
     }
}

