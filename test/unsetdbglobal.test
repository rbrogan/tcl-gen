package require tcltest
package require -exact gen 1.10.3
source gen-test-common.tcl

namespace eval UnsetDbGlobalTest {}



proc UnsetDbGlobalTest::Test-1 {} {

::tcltest::test UnsetDbGlobal-0 {Basic test}  -constraints {[expr [CheckAllDependenciesLoaded UnsetDbGlobal]]}  -setup {sqlite3 testdb test.db}  -body {SetDbGlobal MyUnsetVariable 123
puts "[QQ [SqlCountStatement globals {desc 'MyUnsetVariable'}]]"
UnsetDbGlobal MyUnsetVariable
puts "[QQ [SqlCountStatement globals {desc 'MyUnsetVariable'}]]"
}  -cleanup {}  -result {}  -output {1
0
}  -returnCodes {0}  

}



proc UnsetDbGlobalTest::Test-2 {} {

::tcltest::test UnsetDbGlobal-1 {Variable to unset does not exist}  -constraints {[expr [CheckAllDependenciesLoaded UnsetDbGlobal]]}  -setup {sqlite3 testdb test.db
}  -body {UnsetDbGlobal asdf
}  -cleanup {}  -result {}  -output {}  -returnCodes {0}  

}



proc UnsetDbGlobalTest::Test-3 {} {

::tcltest::test UnsetDbGlobal-2 {Variable name is empty}  -constraints {[expr [CheckAllDependenciesLoaded UnsetDbGlobal]]}  -setup {}  -body {UnsetDbGlobal ""
}  -cleanup {}  -result {Variable VarName has empty value.}  -output {}  -returnCodes {1}  

}



if {([llength $::argv] == 0) || ([lindex $::argv 0] ne "target")} {
     UnsetDbGlobalTest::Test-1
     UnsetDbGlobalTest::Test-2
     UnsetDbGlobalTest::Test-3
} else {
     foreach Element [lrange $::argv 1 end] {
          UnsetDbGlobalTest::Test-[set Element]
     }
}

