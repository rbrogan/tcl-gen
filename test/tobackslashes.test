package require tcltest
package require -exact gen 1.8.0

namespace eval ToBackslashesTest {}



proc ToBackslashesTest::Test-1 {} {

::tcltest::test ToBackslashes-0 {Basic test}  -constraints {}  -setup {}  -body {ToBackslashes c:/some/path/to/file.txt}  -cleanup {}  -result {c:\some\path\to\file.txt}  -output {}  -returnCodes {0}  

}



proc ToBackslashesTest::Test-2 {} {

::tcltest::test ToBackslashes-1 {Empty string input}  -constraints {}  -setup {}  -body {ToBackslashes ""}  -cleanup {}  -result {}  -output {}  -returnCodes {0}  

}



proc ToBackslashesTest::Test-3 {} {

::tcltest::test ToBackslashes-2 {Basic test - from double backslashes}  -constraints {}  -setup {}  -body {set MyVar c:\\\\path\\\\to\\\\somefile.txt
ToBackslashes $MyVar}  -cleanup {}  -result {c:\path\to\somefile.txt}  -output {}  -returnCodes {0}  

}



proc ToBackslashesTest::Test-4 {} {

::tcltest::test ToBackslashes-3 {Test at}  -constraints {}  -setup {}  -body {set MyString c:/some/path/to/file.txt
ToBackslashes @MyString
puts $MyString
}  -cleanup {}  -result {}  -output {c:\some\path\to\file.txt
}  -returnCodes {0}  

}



if {([llength $::argv] == 0) || ([lindex $::argv 0] ne "target")} {
     ToBackslashesTest::Test-1
     ToBackslashesTest::Test-2
     ToBackslashesTest::Test-3
     ToBackslashesTest::Test-4
} else {
     foreach Element [lrange $::argv 1 end] {
          ToBackslashesTest::Test-[set Element]
     }
}

