package require tcltest
package require -exact gen 1.15.0
source gen-test-common.tcl

namespace eval RunSqlCreateTableTest {}



proc RunSqlCreateTableTest::Test-1 {} {

::tcltest::test RunSqlCreateTable-0 {Basic test}  -constraints {[expr [CheckAllDependenciesLoaded RunSqlCreateTable]]}  -setup {sqlite3 testdb test.db
catch {QQ {DROP TABLE temp_table}}
}  -body {RunSqlCreateTable temp_table {id {integer primary key} desc text notes text}
QQ [SqlInsertStatement temp_table {desc 'first' notes '1-2-3'}]
SqlRecordExists temp_table {desc 'first'}
}  -cleanup {catch {QQ {DROP TABLE temp_table}}

}  -result {1}  -output {}  -returnCodes {0}  

}



proc RunSqlCreateTableTest::Test-2 {} {

::tcltest::test RunSqlCreateTable-1 {Table name is empty}  -constraints {[expr [CheckAllDependenciesLoaded RunSqlCreateTable]]}  -setup {}  -body {RunSqlCreateTable "" ""}  -cleanup {}  -result {Variable TableName has empty value.}  -output {}  -returnCodes {1}  

}



proc RunSqlCreateTableTest::Test-3 {} {

::tcltest::test RunSqlCreateTable-2 {Attributes empty}  -constraints {[expr [CheckAllDependenciesLoaded RunSqlCreateTable]]}  -setup {}  -body {RunSqlCreateTable temp_table {}
}  -cleanup {}  -result {Variable ColumnNameTypeList has empty value.}  -output {}  -returnCodes {1}  

}



if {([llength $::argv] == 0) || ([lindex $::argv 0] ne "target")} {
     RunSqlCreateTableTest::Test-1
     RunSqlCreateTableTest::Test-2
     RunSqlCreateTableTest::Test-3
} else {
     foreach Element [lrange $::argv 1 end] {
          RunSqlCreateTableTest::Test-[set Element]
     }
}

