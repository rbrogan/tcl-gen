package require tcltest
package require -exact gen 1.8.0

namespace eval TimeOfDayIsBetweenTest {}



proc TimeOfDayIsBetweenTest::Test-1 {} {

::tcltest::test TimeOfDayIsBetween-0 {First is between second and third}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween 01:02:03 01:02:02 01:02:04}  -cleanup {}  -result {1}  -output {}  -returnCodes {0}  

}



proc TimeOfDayIsBetweenTest::Test-2 {} {

::tcltest::test TimeOfDayIsBetween-1 {First is before second and third}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween 01:02:01 01:02:02 01:02:04}  -cleanup {}  -result {0}  -output {}  -returnCodes {0}  

}



proc TimeOfDayIsBetweenTest::Test-3 {} {

::tcltest::test TimeOfDayIsBetween-2 {First is after second and third}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween 01:02:05 01:02:02 01:02:04}  -cleanup {}  -result {0}  -output {}  -returnCodes {0}  

}



proc TimeOfDayIsBetweenTest::Test-4 {} {

::tcltest::test TimeOfDayIsBetween-3 {First equals second}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween 01:02:02 01:02:02 01:02:04
}  -cleanup {}  -result {0}  -output {}  -returnCodes {0}  

}



proc TimeOfDayIsBetweenTest::Test-5 {} {

::tcltest::test TimeOfDayIsBetween-4 {First equals third}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween 01:02:04 01:02:02 01:02:04
}  -cleanup {}  -result {0}  -output {}  -returnCodes {0}  

}



proc TimeOfDayIsBetweenTest::Test-6 {} {

::tcltest::test TimeOfDayIsBetween-5 {Second is after third}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween 01:02:03 01:02:04 01:02:02}  -cleanup {}  -result {Arguments SecondTimeOfDay and ThirdTimeOfDay have incoherent values 01:02:04 and 01:02:02.}  -output {}  -returnCodes {1}  

}



proc TimeOfDayIsBetweenTest::Test-7 {} {

::tcltest::test TimeOfDayIsBetween-6 {First is invalid}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween asdf 01:02:02 01:02:04}  -cleanup {}  -result {Variable FirstTimeOfDay has invalid value asdf.}  -output {}  -returnCodes {1}  

}



proc TimeOfDayIsBetweenTest::Test-8 {} {

::tcltest::test TimeOfDayIsBetween-7 {Second is invalid}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween 01:02:03 asdf 01:02:04}  -cleanup {}  -result {Variable SecondTimeOfDay has invalid value asdf.}  -output {}  -returnCodes {1}  

}



proc TimeOfDayIsBetweenTest::Test-9 {} {

::tcltest::test TimeOfDayIsBetween-8 {Third is invalid}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween 01:02:03 01:02:02 asdf}  -cleanup {}  -result {Variable ThirdTimeOfDay has invalid value asdf.}  -output {}  -returnCodes {1}  

}



proc TimeOfDayIsBetweenTest::Test-10 {} {

::tcltest::test TimeOfDayIsBetween-9 {Use alternate format}  -constraints {}  -setup {}  -body {SetTimeOfDayFormat {{%I%M %p} -timezone :America/New_York -locale en_US}
TimeOfDayIsBetween {0101 PM} {0100 PM} {0102 PM}
}  -cleanup {SetTimeOfDayFormat {%H:%M:%S}
}  -result {1}  -output {}  -returnCodes {0}  

}



proc TimeOfDayIsBetweenTest::Test-11 {} {

::tcltest::test TimeOfDayIsBetween-10 {Option is invalid}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween 01:02:03 01:02:02 01:02:04 asdf}  -cleanup {}  -result {Variable Option has invalid value asdf.}  -output {}  -returnCodes {1}  

}



proc TimeOfDayIsBetweenTest::Test-12 {} {

::tcltest::test TimeOfDayIsBetween-11 {First is equal to second and both inclusive}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween 01:02:02 01:02:02 01:02:04 BothInclusive
}  -cleanup {}  -result {1}  -output {}  -returnCodes {0}  

}



proc TimeOfDayIsBetweenTest::Test-13 {} {

::tcltest::test TimeOfDayIsBetween-12 {First is equal to second and LeftInclusive}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween 01:02:02 01:02:02 01:02:04 LeftInclusive
}  -cleanup {}  -result {1}  -output {}  -returnCodes {0}  

}



proc TimeOfDayIsBetweenTest::Test-14 {} {

::tcltest::test TimeOfDayIsBetween-13 {First is equal to second and LeftExclusive}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween 01:02:02 01:02:02 01:02:04 LeftExclusive
}  -cleanup {}  -result {0}  -output {}  -returnCodes {0}  

}



proc TimeOfDayIsBetweenTest::Test-15 {} {

::tcltest::test TimeOfDayIsBetween-14 {First is equal to third and BothInclusive}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween 01:02:04 01:02:02 01:02:04 BothInclusive
}  -cleanup {}  -result {1}  -output {}  -returnCodes {0}  

}



proc TimeOfDayIsBetweenTest::Test-16 {} {

::tcltest::test TimeOfDayIsBetween-15 {First is equal to third and LeftInclusive}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween 01:02:04 01:02:02 01:02:04 LeftInclusive
}  -cleanup {}  -result {0}  -output {}  -returnCodes {0}  

}



proc TimeOfDayIsBetweenTest::Test-17 {} {

::tcltest::test TimeOfDayIsBetween-16 {First is equal to third and LeftExclusive}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween 01:02:04 01:02:02 01:02:04 LeftExclusive
}  -cleanup {}  -result {1}  -output {}  -returnCodes {0}  

}



proc TimeOfDayIsBetweenTest::Test-18 {} {

::tcltest::test TimeOfDayIsBetween-17 {First is equal to second and RightInclusive}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween 01:02:02 01:02:02 01:02:04 RightInclusive
}  -cleanup {}  -result {0}  -output {}  -returnCodes {0}  

}



proc TimeOfDayIsBetweenTest::Test-19 {} {

::tcltest::test TimeOfDayIsBetween-18 {First is equal to second and RightExclusive}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween 01:02:02 01:02:02 01:02:04 RightExclusive
}  -cleanup {}  -result {1}  -output {}  -returnCodes {0}  

}



proc TimeOfDayIsBetweenTest::Test-20 {} {

::tcltest::test TimeOfDayIsBetween-19 {First is equal to third and RightInclusive}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween 01:02:04 01:02:02 01:02:04 RightInclusive
}  -cleanup {}  -result {1}  -output {}  -returnCodes {0}  

}



proc TimeOfDayIsBetweenTest::Test-21 {} {

::tcltest::test TimeOfDayIsBetween-20 {First is equal to third and RightExclusive}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween 01:02:04 01:02:02 01:02:04 RightExclusive
}  -cleanup {}  -result {0}  -output {}  -returnCodes {0}  

}



proc TimeOfDayIsBetweenTest::Test-22 {} {

::tcltest::test TimeOfDayIsBetween-21 {First is between second and third, BothInclusive}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween 01:02:03 01:02:02 01:02:04 BothInclusive}  -cleanup {}  -result {1}  -output {}  -returnCodes {0}  

}



proc TimeOfDayIsBetweenTest::Test-23 {} {

::tcltest::test TimeOfDayIsBetween-22 {First is between second and third, LeftExclusive}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween 01:02:03 01:02:02 01:02:04 LeftExclusive}  -cleanup {}  -result {1}  -output {}  -returnCodes {0}  

}



proc TimeOfDayIsBetweenTest::Test-24 {} {

::tcltest::test TimeOfDayIsBetween-23 {First is between second and third, RightInclusive}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween 01:02:03 01:02:02 01:02:04 RightInclusive}  -cleanup {}  -result {1}  -output {}  -returnCodes {0}  

}



proc TimeOfDayIsBetweenTest::Test-25 {} {

::tcltest::test TimeOfDayIsBetween-24 {First is between second and third, RightExclusive}  -constraints {}  -setup {}  -body {TimeOfDayIsBetween 01:02:03 01:02:02 01:02:04 RightExclusive}  -cleanup {}  -result {1}  -output {}  -returnCodes {0}  

}



if {([llength $::argv] == 0) || ([lindex $::argv 0] ne "target")} {
     TimeOfDayIsBetweenTest::Test-1
     TimeOfDayIsBetweenTest::Test-2
     TimeOfDayIsBetweenTest::Test-3
     TimeOfDayIsBetweenTest::Test-4
     TimeOfDayIsBetweenTest::Test-5
     TimeOfDayIsBetweenTest::Test-6
     TimeOfDayIsBetweenTest::Test-7
     TimeOfDayIsBetweenTest::Test-8
     TimeOfDayIsBetweenTest::Test-9
     TimeOfDayIsBetweenTest::Test-10
     TimeOfDayIsBetweenTest::Test-11
     TimeOfDayIsBetweenTest::Test-12
     TimeOfDayIsBetweenTest::Test-13
     TimeOfDayIsBetweenTest::Test-14
     TimeOfDayIsBetweenTest::Test-15
     TimeOfDayIsBetweenTest::Test-16
     TimeOfDayIsBetweenTest::Test-17
     TimeOfDayIsBetweenTest::Test-18
     TimeOfDayIsBetweenTest::Test-19
     TimeOfDayIsBetweenTest::Test-20
     TimeOfDayIsBetweenTest::Test-21
     TimeOfDayIsBetweenTest::Test-22
     TimeOfDayIsBetweenTest::Test-23
     TimeOfDayIsBetweenTest::Test-24
     TimeOfDayIsBetweenTest::Test-25
} else {
     foreach Element [lrange $::argv 1 end] {
          TimeOfDayIsBetweenTest::Test-[set Element]
     }
}

