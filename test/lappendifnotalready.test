package require tcltest
package require -exact gen 1.12.1
source gen-test-common.tcl

namespace eval LappendIfNotAlreadyTest {}



proc LappendIfNotAlreadyTest::Test-1 {} {

::tcltest::test LappendIfNotAlready-0 {Basic test}  -constraints {[expr [CheckAllDependenciesLoaded LappendIfNotAlready]]}  -setup {}  -body {set MyList [list one two three]
LappendIfNotAlready MyList {four five}
}  -cleanup {}  -result {one two three four five}  -output {}  -returnCodes {0}  

}



proc LappendIfNotAlreadyTest::Test-2 {} {

::tcltest::test LappendIfNotAlready-1 {Variable not pre-existing}  -constraints {[expr [CheckAllDependenciesLoaded LappendIfNotAlready]]}  -setup {}  -body {unset -nocomplain NoSuchVar
LappendIfNotAlready NoSuchVar {four five}
}  -cleanup {}  -result {four five}  -output {}  -returnCodes {0}  

}



proc LappendIfNotAlreadyTest::Test-3 {} {

::tcltest::test LappendIfNotAlready-2 {Append nothing}  -constraints {[expr [CheckAllDependenciesLoaded LappendIfNotAlready]]}  -setup {}  -body {set MyList [list one two three]
LappendIfNotAlready MyList {}}  -cleanup {}  -result {one two three}  -output {}  -returnCodes {0}  

}



proc LappendIfNotAlreadyTest::Test-4 {} {

::tcltest::test LappendIfNotAlready-3 {List already contains elements}  -constraints {[expr [CheckAllDependenciesLoaded LappendIfNotAlready]]}  -setup {}  -body {set MyList [list one two three]
LappendIfNotAlready MyList {one three}}  -cleanup {}  -result {one two three}  -output {}  -returnCodes {0}  

}



proc LappendIfNotAlreadyTest::Test-5 {} {

::tcltest::test LappendIfNotAlready-4 {Append list contains empty list}  -constraints {[expr [CheckAllDependenciesLoaded LappendIfNotAlready]]}  -setup {}  -body {set MyList [list one two three]
LappendIfNotAlready MyList {four {} six}
}  -cleanup {}  -result {one two three four {} six}  -output {}  -returnCodes {0}  

}



if {([llength $::argv] == 0) || ([lindex $::argv 0] ne "target")} {
     LappendIfNotAlreadyTest::Test-1
     LappendIfNotAlreadyTest::Test-2
     LappendIfNotAlreadyTest::Test-3
     LappendIfNotAlreadyTest::Test-4
     LappendIfNotAlreadyTest::Test-5
} else {
     foreach Element [lrange $::argv 1 end] {
          LappendIfNotAlreadyTest::Test-[set Element]
     }
}

