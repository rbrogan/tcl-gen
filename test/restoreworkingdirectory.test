package require tcltest
package require -exact gen 1.10.3
source gen-test-common.tcl

namespace eval RestoreWorkingDirectoryTest {}



proc RestoreWorkingDirectoryTest::Test-1 {} {

::tcltest::test RestoreWorkingDirectory-0 {Basic test}  -constraints {[expr [CheckAllDependenciesLoaded RestoreWorkingDirectory]]}  -setup {file delete -force TestSaveWorkingDirectory}  -body {set OriginalWorkingDirectory [SaveWorkingDirectory]
file mkdir TestSaveWorkingDirectory
cd TestSaveWorkingDirectory
set Return [RestoreWorkingDirectory]
if {([pwd] eq $OriginalWorkingDirectory) && ($Return eq $OriginalWorkingDirectory)} {
	set Result 1
} else {
	set Result 0
}
}  -cleanup {file delete -force TestSaveWorkingDirectory}  -result {1}  -output {}  -returnCodes {0}  

}



proc RestoreWorkingDirectoryTest::Test-2 {} {

::tcltest::test RestoreWorkingDirectory-1 {Restore without previous save}  -constraints {[expr [CheckAllDependenciesLoaded RestoreWorkingDirectory]]}  -setup {set GenNS::SavedWorkingDirectory ""
file delete -force TestSaveWorkingDirectory}  -body {set OriginalWorkingDirectory [pwd]
file mkdir TestSaveWorkingDirectory
cd TestSaveWorkingDirectory
RestoreWorkingDirectory
if {[pwd] eq "$OriginalWorkingDirectory/TestSaveWorkingDirectory"} {
	set Result 1
} else {
	set Result 0
}
cd $OriginalWorkingDirectory
set Result}  -cleanup {file delete -force TestSaveWorkingDirectory}  -result {1}  -output {}  -returnCodes {0}  

}



if {([llength $::argv] == 0) || ([lindex $::argv 0] ne "target")} {
     RestoreWorkingDirectoryTest::Test-1
     RestoreWorkingDirectoryTest::Test-2
} else {
     foreach Element [lrange $::argv 1 end] {
          RestoreWorkingDirectoryTest::Test-[set Element]
     }
}

