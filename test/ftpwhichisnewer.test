package require tcltest
package require -exact gen 1.12.0
source gen-test-common.tcl

namespace eval FtpWhichIsNewerTest {}



proc FtpWhichIsNewerTest::Test-1 {} {

::tcltest::test FtpWhichIsNewer-0 {Local file is newer}  -constraints {[expr [CheckAllDependenciesLoaded FtpWhichIsNewer]]}  -setup {source ftp-test-config.tcl
file delete -force $GenTest::Ftp::LocalRoot/downloadto/temp/different-times
file copy -force $GenTest::Ftp::LocalRoot/downloadto/original/different-times $GenTest::Ftp::LocalRoot/downloadto/temp/different-times
SaveWorkingDirectory}  -body {set FtpHandle [ftp::Open $GenNS::Ftp::Server $GenNS::Ftp::Username $GenNS::Ftp::Password {*}$GenNS::Ftp::OptionsList]
if {$FtpHandle == -1} {
	error "FTP: Could not open connection!"
}
cd $GenTest::Ftp::LocalRoot/downloadto/temp/different-times
ftp::Cd $FtpHandle $GenTest::Ftp::RemoteRoot/downloadfrom/different-times
FtpWhichIsNewer $FtpHandle local-newer.txt
}  -cleanup {RestoreWorkingDirectory
ftp::Close $FtpHandle
file delete -force $GenTest::Ftp::LocalRoot/downloadto/temp/different-times
file copy -force $GenTest::Ftp::LocalRoot/downloadto/original/different-times $GenTest::Ftp::LocalRoot/downloadto/temp/different-times}  -result {local}  -output {}  -returnCodes {0}  

}



proc FtpWhichIsNewerTest::Test-2 {} {

::tcltest::test FtpWhichIsNewer-1 {Remote file is newer}  -constraints {[expr [CheckAllDependenciesLoaded FtpWhichIsNewer]]}  -setup {source ftp-test-config.tcl
file delete -force $GenTest::Ftp::LocalRoot/downloadto/temp/different-times
file copy -force $GenTest::Ftp::LocalRoot/downloadto/original/different-times $GenTest::Ftp::LocalRoot/downloadto/temp/different-times
SaveWorkingDirectory}  -body {set FtpHandle [ftp::Open $GenNS::Ftp::Server $GenNS::Ftp::Username $GenNS::Ftp::Password {*}$GenNS::Ftp::OptionsList]
if {$FtpHandle == -1} {
	error "FTP: Could not open connection!"
}
cd $GenTest::Ftp::LocalRoot/downloadto/temp/different-times
ftp::Cd $FtpHandle $GenTest::Ftp::RemoteRoot/downloadfrom/different-times
FtpWhichIsNewer $FtpHandle remote-newer.txt
}  -cleanup {RestoreWorkingDirectory
ftp::Close $FtpHandle
file delete -force $GenTest::Ftp::LocalRoot/downloadto/temp/different-times
file copy -force $GenTest::Ftp::LocalRoot/downloadto/original/different-times $GenTest::Ftp::LocalRoot/downloadto/temp/different-times}  -result {remote}  -output {}  -returnCodes {0}  

}



proc FtpWhichIsNewerTest::Test-3 {} {

::tcltest::test FtpWhichIsNewer-3 {File not available locally}  -constraints {[expr [CheckAllDependenciesLoaded FtpWhichIsNewer]]}  -setup {source ftp-test-config.tcl
file delete -force $GenTest::Ftp::LocalRoot/downloadto/temp/different-times
file copy -force $GenTest::Ftp::LocalRoot/downloadto/original/different-times $GenTest::Ftp::LocalRoot/downloadto/temp/different-times
SaveWorkingDirectory}  -body {set FtpHandle [ftp::Open $GenNS::Ftp::Server $GenNS::Ftp::Username $GenNS::Ftp::Password {*}$GenNS::Ftp::OptionsList]
if {$FtpHandle == -1} {
	error "FTP: Could not open connection!"
}
cd $GenTest::Ftp::LocalRoot/downloadto/temp/different-times
ftp::Cd $FtpHandle $GenTest::Ftp::RemoteRoot/downloadfrom/different-times
FtpWhichIsNewer $FtpHandle does-not-exist-on-local.txt
}  -cleanup {RestoreWorkingDirectory
ftp::Close $FtpHandle
file delete -force $GenTest::Ftp::LocalRoot/downloadto/temp/different-times
file copy -force $GenTest::Ftp::LocalRoot/downloadto/original/different-times $GenTest::Ftp::LocalRoot/downloadto/temp/different-times}  -result {could not read "does-not-exist-on-local.txt": no such file or directory}  -output {}  -returnCodes {1}  

}



proc FtpWhichIsNewerTest::Test-4 {} {

::tcltest::test FtpWhichIsNewer-4 {File not available remotely}  -constraints {[expr [CheckAllDependenciesLoaded FtpWhichIsNewer]]}  -setup {source ftp-test-config.tcl
file delete -force $GenTest::Ftp::LocalRoot/downloadto/temp/different-times
file copy -force $GenTest::Ftp::LocalRoot/downloadto/original/different-times $GenTest::Ftp::LocalRoot/downloadto/temp/different-times
SaveWorkingDirectory}  -body {set FtpHandle [ftp::Open $GenNS::Ftp::Server $GenNS::Ftp::Username $GenNS::Ftp::Password {*}$GenNS::Ftp::OptionsList]
if {$FtpHandle == -1} {
	error "FTP: Could not open connection!"
}
cd $GenTest::Ftp::LocalRoot/downloadto/temp/different-times
ftp::Cd $FtpHandle $GenTest::Ftp::RemoteRoot/downloadfrom/different-times
FtpWhichIsNewer $FtpHandle does-not-exist-on-remote.txt
}  -cleanup {RestoreWorkingDirectory
ftp::Close $FtpHandle
file delete -force $GenTest::Ftp::LocalRoot/downloadto/temp/different-times
file copy -force $GenTest::Ftp::LocalRoot/downloadto/original/different-times $GenTest::Ftp::LocalRoot/downloadto/temp/different-times}  -result {FTP: Could not get file mod time for does-not-exist-on-remote.txt.}  -output {}  -returnCodes {1}  

}



if {([llength $::argv] == 0) || ([lindex $::argv 0] ne "target")} {
     FtpWhichIsNewerTest::Test-1
     FtpWhichIsNewerTest::Test-2
     FtpWhichIsNewerTest::Test-3
     FtpWhichIsNewerTest::Test-4
} else {
     foreach Element [lrange $::argv 1 end] {
          FtpWhichIsNewerTest::Test-[set Element]
     }
}

