package require tcltest
package require -exact gen 1.13.0
source gen-test-common.tcl

namespace eval DbaseRegsubTest {}



proc DbaseRegsubTest::Test-1 {} {

::tcltest::test DbaseRegsub-0 {Basic test}  -constraints {[expr [CheckAllDependenciesLoaded DbaseRegsub]]}  -setup {sqlite3 testdb test.db}  -body {RunSqlEnter my_table {desc '01' notes 'regsub_target'}
RunSqlEnter my_table {desc '11' notes 'regsub_target'}
RunSqlEnter my_table {desc '10' notes 'regsub_target'}
set NumReplacements [DbaseRegsub my_table desc 0 2]
puts $NumReplacements
QQ {SELECT desc FROM my_table WHERE notes = 'regsub_target'}
}  -cleanup {QQ {DELETE FROM my_table WHERE notes = 'regsub_target'}
}  -result {21 11 12}  -output {2
}  -returnCodes {0}  

}



proc DbaseRegsubTest::Test-2 {} {

::tcltest::test DbaseRegsub-3 {Table name empty}  -constraints {[expr [CheckAllDependenciesLoaded DbaseRegsub]]}  -setup {}  -body {DbaseRegsub "" desc OldName NewName
}  -cleanup {}  -result {Variable TableName has empty value.}  -output {}  -returnCodes {1}  

}



proc DbaseRegsubTest::Test-3 {} {

::tcltest::test DbaseRegsub-4 {Field name empty}  -constraints {[expr [CheckAllDependenciesLoaded DbaseRegsub]]}  -setup {}  -body {DbaseRegsub my_table "" OldName NewName
}  -cleanup {}  -result {Variable ColumnName has empty value.}  -output {}  -returnCodes {1}  

}



proc DbaseRegsubTest::Test-4 {} {

::tcltest::test DbaseRegsub-5 {Find misses}  -constraints {[expr [CheckAllDependenciesLoaded DbaseRegsub]]}  -setup {sqlite3 testdb test.db}  -body {RunSqlEnter my_table {desc '01' notes 'regsub_target'}
RunSqlEnter my_table {desc '11' notes 'regsub_target'}
RunSqlEnter my_table {desc '10' notes 'regsub_target'}
DbaseRegsub my_table desc 2 3
QQ {SELECT desc FROM my_table WHERE notes = 'regsub_target'}
}  -cleanup {QQ {DELETE FROM my_table WHERE notes = 'regsub_target'}
}  -result {01 11 10}  -output {}  -returnCodes {0}  

}



proc DbaseRegsubTest::Test-5 {} {

::tcltest::test DbaseRegsub-6 {Find empty}  -constraints {[expr [CheckAllDependenciesLoaded DbaseRegsub]]}  -setup {}  -body {DbaseRegsub my_table desc "" NewName
}  -cleanup {}  -result {Variable FindValue has empty value.}  -output {}  -returnCodes {1}  

}



proc DbaseRegsubTest::Test-6 {} {

::tcltest::test DbaseRegsub-7 {WhereDict used}  -constraints {[expr [CheckAllDependenciesLoaded DbaseRegsub]]}  -setup {sqlite3 testdb test.db}  -body {RunSqlEnter my_table {desc '01' notes 'regsub_target'}
RunSqlEnter my_table {desc '11' notes 'regsub_target'}
RunSqlEnter my_table {desc '10' notes 'regsub_target'}
DbaseRegsub my_table desc 0 2 {desc '01'}
QQ {SELECT desc FROM my_table WHERE notes = 'regsub_target'}
}  -cleanup {QQ {DELETE FROM my_table WHERE notes = 'regsub_target'}
}  -result {21 11 10}  -output {}  -returnCodes {0}  

}



proc DbaseRegsubTest::Test-7 {} {

::tcltest::test DbaseRegsub-8 {No records match}  -constraints {[expr [CheckAllDependenciesLoaded DbaseRegsub]]}  -setup {sqlite3 testdb test.db}  -body {RunSqlEnter my_table {desc '01' notes 'regsub_target'}
RunSqlEnter my_table {desc '11' notes 'regsub_target'}
RunSqlEnter my_table {desc '10' notes 'regsub_target'}
DbaseRegsub my_table desc 0 2 {desc 'xx'}
QQ {SELECT desc FROM my_table WHERE notes = 'regsub_target'}
}  -cleanup {QQ {DELETE FROM my_table WHERE notes = 'regsub_target'}
}  -result {01 11 10}  -output {}  -returnCodes {0}  

}



proc DbaseRegsubTest::Test-8 {} {

::tcltest::test DbaseRegsub-9 {ReplaceValue empty}  -constraints {[expr [CheckAllDependenciesLoaded DbaseRegsub]]}  -setup {sqlite3 testdb test.db}  -body {RunSqlEnter my_table {desc '01' notes 'regsub_target'}
RunSqlEnter my_table {desc '11' notes 'regsub_target'}
RunSqlEnter my_table {desc '10' notes 'regsub_target'}
DbaseRegsub my_table desc 0 ""
QQ {SELECT desc FROM my_table WHERE notes = 'regsub_target'}
}  -cleanup {QQ {DELETE FROM my_table WHERE notes = 'regsub_target'}
}  -result {1 11 1}  -output {}  -returnCodes {0}  

}



if {([llength $::argv] == 0) || ([lindex $::argv 0] ne "target")} {
     DbaseRegsubTest::Test-1
     DbaseRegsubTest::Test-2
     DbaseRegsubTest::Test-3
     DbaseRegsubTest::Test-4
     DbaseRegsubTest::Test-5
     DbaseRegsubTest::Test-6
     DbaseRegsubTest::Test-7
     DbaseRegsubTest::Test-8
} else {
     foreach Element [lrange $::argv 1 end] {
          DbaseRegsubTest::Test-[set Element]
     }
}

