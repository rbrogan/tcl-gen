package require tcltest
package require -exact gen 1.14.0
source gen-test-common.tcl

namespace eval RegistryExistsTest {}



proc RegistryExistsTest::Test-1 {} {

::tcltest::test RegistryExists-0 {Basic test - return 1}  -constraints {[expr [CheckAllDependenciesLoaded RegistryExists]]}  -setup {registry set "HKEY_CURRENT_USER\\Software\\GenTest"
registry set "HKEY_CURRENT_USER\\Software\\GenTest" testy 123
}  -body {RegistryExists "HKEY_CURRENT_USER\\Software\\GenTest" testy
}  -cleanup {registry delete "HKEY_CURRENT_USER\\Software\\GenTest"

}  -result {1}  -output {}  -returnCodes {0}  

}



proc RegistryExistsTest::Test-2 {} {

::tcltest::test RegistryExists-1 {Basic test - return 0}  -constraints {[expr [CheckAllDependenciesLoaded RegistryExists]]}  -setup {registry delete "HKEY_CURRENT_USER\\Software\\GenTest"
}  -body {RegistryExists "HKEY_CURRENT_USER\\Software\\GenTest" testy
}  -cleanup {}  -result {0}  -output {}  -returnCodes {0}  

}



proc RegistryExistsTest::Test-3 {} {

::tcltest::test RegistryExists-2 {ValueName is empty}  -constraints {[expr [CheckAllDependenciesLoaded RegistryExists]]}  -setup {registry set "HKEY_CURRENT_USER\\Software\\GenTest"
}  -body {RegistryExists "HKEY_CURRENT_USER\\Software\\GenTest"
}  -cleanup {registry delete "HKEY_CURRENT_USER\\Software\\GenTest"
}  -result {1}  -output {}  -returnCodes {0}  

}



proc RegistryExistsTest::Test-4 {} {

::tcltest::test RegistryExists-3 {KeyName is empty}  -constraints {[expr [CheckAllDependenciesLoaded RegistryExists]]}  -setup {}  -body {RegistryExists {} testy
}  -cleanup {}  -result {Variable KeyName has empty value.}  -output {}  -returnCodes {1}  

}



if {([llength $::argv] == 0) || ([lindex $::argv 0] ne "target")} {
     RegistryExistsTest::Test-1
     RegistryExistsTest::Test-2
     RegistryExistsTest::Test-3
     RegistryExistsTest::Test-4
} else {
     foreach Element [lrange $::argv 1 end] {
          RegistryExistsTest::Test-[set Element]
     }
}

