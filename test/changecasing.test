package require tcltest
package require -exact gen 1.11.1
source gen-test-common.tcl

namespace eval ChangeCasingTest {}



proc ChangeCasingTest::Test-1 {} {

::tcltest::test ChangeCasing-0 {PascalCase to xxxx}  -constraints {[expr [CheckAllDependenciesLoaded ChangeCasing]]}  -setup {}  -body {puts [ChangeCasing HelloWorld PascalCase mixedCase]
puts [ChangeCasing HelloWorld PascalCase {Title Case}]
puts [ChangeCasing HelloWorld PascalCase hyphenated-case]
puts [ChangeCasing HelloWorld PascalCase {HYPHENATED-CASE}]
puts [ChangeCasing HelloWorld PascalCase mashedcase]
puts [ChangeCasing HelloWorld PascalCase MASHEDCASE]
puts [ChangeCasing HelloWorld PascalCase {phrase case}]
puts [ChangeCasing HelloWorld PascalCase {PHRASE UPPER}]
puts [ChangeCasing HelloWorld PascalCase {snake_case}]
puts [ChangeCasing HelloWorld PascalCase {SNAKE_CASE}]}  -cleanup {}  -result {}  -output {helloWorld
Hello World
hello-world
HELLO-WORLD
helloworld
HELLOWORLD
hello world
HELLO WORLD
hello_world
HELLO_WORLD
}  -returnCodes {0}  

}



proc ChangeCasingTest::Test-2 {} {

::tcltest::test ChangeCasing-1 {xxxx to PascalCase}  -constraints {[expr [CheckAllDependenciesLoaded ChangeCasing]]}  -setup {}  -body {puts [ChangeCasing helloWorld mixedCase PascalCase]
puts [ChangeCasing {Hello World} {Title Case} PascalCase]
puts [ChangeCasing hello-world hyphenated-case PascalCase]
puts [ChangeCasing HELLO-WORLD {HYPHENATED-CASE} PascalCase]
puts [ChangeCasing {hello world} {phrase case} PascalCase]
puts [ChangeCasing {HELLO WORLD} {PHRASE UPPER} PascalCase]
puts [ChangeCasing hello_world {snake_case} PascalCase]
puts [ChangeCasing HELLO_WORLD {SNAKE_CASE} PascalCase]}  -cleanup {}  -result {}  -output {HelloWorld
HelloWorld
HelloWorld
HelloWorld
HelloWorld
HelloWorld
HelloWorld
HelloWorld
}  -returnCodes {0}  

}



proc ChangeCasingTest::Test-3 {} {

::tcltest::test ChangeCasing-2 {Empty string for value}  -constraints {[expr [CheckAllDependenciesLoaded ChangeCasing]]}  -setup {}  -body {ChangeCasing "" PascalCase snake_case
}  -cleanup {}  -result {}  -output {}  -returnCodes {0}  

}



proc ChangeCasingTest::Test-4 {} {

::tcltest::test ChangeCasing-3 {Invalid from case}  -constraints {[expr [CheckAllDependenciesLoaded ChangeCasing]]}  -setup {}  -body {ChangeCasing "Hello World" asdf snake_case}  -cleanup {}  -result {From type asdf not supported. Consider using type none.}  -output {}  -returnCodes {1}  

}



proc ChangeCasingTest::Test-5 {} {

::tcltest::test ChangeCasing-4 {Invalid to case}  -constraints {[expr [CheckAllDependenciesLoaded ChangeCasing]]}  -setup {}  -body {ChangeCasing "Hello World" {Title Case} asdf}  -cleanup {}  -result {To type asdf not supported.}  -output {}  -returnCodes {1}  

}



proc ChangeCasingTest::Test-6 {} {

::tcltest::test ChangeCasing-5 {Test at}  -constraints {[expr [CheckAllDependenciesLoaded ChangeCasing]]}  -setup {}  -body {set MyString {snake_case}
ChangeCasing @MyString snake_lower SNAKE_UPPER
puts $MyString
}  -cleanup {}  -result {}  -output {SNAKE_CASE
}  -returnCodes {0}  

}



if {([llength $::argv] == 0) || ([lindex $::argv 0] ne "target")} {
     ChangeCasingTest::Test-1
     ChangeCasingTest::Test-2
     ChangeCasingTest::Test-3
     ChangeCasingTest::Test-4
     ChangeCasingTest::Test-5
     ChangeCasingTest::Test-6
} else {
     foreach Element [lrange $::argv 1 end] {
          ChangeCasingTest::Test-[set Element]
     }
}

