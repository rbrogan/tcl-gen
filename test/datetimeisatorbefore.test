package require tcltest
package require -exact gen 1.8.0

namespace eval DatetimeIsAtOrBeforeTest {}



proc DatetimeIsAtOrBeforeTest::Test-1 {} {

::tcltest::test DatetimeIsAtOrBefore-0 {Datetime is at}  -constraints {}  -setup {}  -body {DatetimeIsAtOrBefore {2000-01-01 00:00:00} {2000-01-01 00:00:00}
}  -cleanup {}  -result {1}  -output {}  -returnCodes {0}  

}



proc DatetimeIsAtOrBeforeTest::Test-2 {} {

::tcltest::test DatetimeIsAtOrBefore-1 {Datetime is before}  -constraints {}  -setup {}  -body {DatetimeIsAtOrBefore {2000-01-01 00:00:00} {2000-01-01 00:00:01}
}  -cleanup {}  -result {1}  -output {}  -returnCodes {0}  

}



proc DatetimeIsAtOrBeforeTest::Test-3 {} {

::tcltest::test DatetimeIsAtOrBefore-2 {Datetime is after}  -constraints {}  -setup {}  -body {DatetimeIsAtOrBefore {2000-01-01 00:00:01} {2000-01-01 00:00:00}
}  -cleanup {}  -result {0}  -output {}  -returnCodes {0}  

}



proc DatetimeIsAtOrBeforeTest::Test-4 {} {

::tcltest::test DatetimeIsAtOrBefore-3 {First is invalid}  -constraints {}  -setup {}  -body {DatetimeIsAtOrBefore asdf {2000-01-01 00:00:00}
}  -cleanup {}  -result {Variable FirstDatetime has invalid value asdf.}  -output {}  -returnCodes {1}  

}



proc DatetimeIsAtOrBeforeTest::Test-5 {} {

::tcltest::test DatetimeIsAtOrBefore-4 {Second is invalid}  -constraints {}  -setup {}  -body {DatetimeIsAtOrBefore {2000-01-01 00:00:00} asdf
}  -cleanup {}  -result {Variable SecondDatetime has invalid value asdf.}  -output {}  -returnCodes {1}  

}



proc DatetimeIsAtOrBeforeTest::Test-6 {} {

::tcltest::test DatetimeIsAtOrBefore-5 {Use alternate format}  -constraints {}  -setup {}  -body {SetDatetimeFormat {{%m/%d/%Y %H%M} -locale en_US -timezone :America/New_York}
DatetimeIsAtOrBefore {01/02/2000 0303} {01/02/2000 0303}
}  -cleanup {SetDatetimeFormat {{%Y-%m-%d %H:%M:%S}}
}  -result {1}  -output {}  -returnCodes {0}  

}



if {([llength $::argv] == 0) || ([lindex $::argv 0] ne "target")} {
     DatetimeIsAtOrBeforeTest::Test-1
     DatetimeIsAtOrBeforeTest::Test-2
     DatetimeIsAtOrBeforeTest::Test-3
     DatetimeIsAtOrBeforeTest::Test-4
     DatetimeIsAtOrBeforeTest::Test-5
     DatetimeIsAtOrBeforeTest::Test-6
} else {
     foreach Element [lrange $::argv 1 end] {
          DatetimeIsAtOrBeforeTest::Test-[set Element]
     }
}

