package require tcltest
package require -exact gen 1.18.0
source gen-test-common.tcl

namespace eval TimeLeftUntilTargetDateTest {}



proc TimeLeftUntilTargetDateTest::Test-1 {} {

::tcltest::test TimeLeftUntilTargetDate-0 {Basic test}  -constraints {[expr [CheckAllDependenciesLoaded TimeLeftUntilTargetDate]]}  -setup {}  -body {TimeLeftUntilTargetDate [Tomorrow]
}  -cleanup {}  -result {1}  -output {}  -returnCodes {0}  

}



proc TimeLeftUntilTargetDateTest::Test-2 {} {

::tcltest::test TimeLeftUntilTargetDate-1 {Invalid date}  -constraints {[expr [CheckAllDependenciesLoaded TimeLeftUntilTargetDate]]}  -setup {}  -body {TimeLeftUntilTargetDate asdf
}  -cleanup {}  -result {Variable TargetDate has invalid value asdf.}  -output {}  -returnCodes {1}  

}



proc TimeLeftUntilTargetDateTest::Test-3 {} {

::tcltest::test TimeLeftUntilTargetDate-2 {Date comes before target date}  -constraints {[expr [CheckAllDependenciesLoaded TimeLeftUntilTargetDate]]}  -setup {}  -body {TimeLeftUntilTargetDate [Yesterday]
}  -cleanup {}  -result {-1}  -output {}  -returnCodes {0}  

}



proc TimeLeftUntilTargetDateTest::Test-4 {} {

::tcltest::test TimeLeftUntilTargetDate-3 {Date and target date are the same}  -constraints {[expr [CheckAllDependenciesLoaded TimeLeftUntilTargetDate]]}  -setup {}  -body {TimeLeftUntilTargetDate [Today]
}  -cleanup {}  -result {0}  -output {}  -returnCodes {0}  

}



if {([llength $::argv] == 0) || ([lindex $::argv 0] ne "target")} {
     TimeLeftUntilTargetDateTest::Test-1
     TimeLeftUntilTargetDateTest::Test-2
     TimeLeftUntilTargetDateTest::Test-3
     TimeLeftUntilTargetDateTest::Test-4
} else {
     foreach Element [lrange $::argv 1 end] {
          TimeLeftUntilTargetDateTest::Test-[set Element]
     }
}

