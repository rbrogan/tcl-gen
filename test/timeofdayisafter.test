package require tcltest
package require -exact gen 1.7.1

namespace eval TimeOfDayIsAfterTest {}



proc TimeOfDayIsAfterTest::Test-1 {} {

::tcltest::test TimeOfDayIsAfter-0 {First is after second}  -constraints {}  -setup {}  -body {TimeOfDayIsAfter 01:02:03 01:00:00}  -cleanup {}  -result {1}  -output {}  -returnCodes {0}  

}



proc TimeOfDayIsAfterTest::Test-2 {} {

::tcltest::test TimeOfDayIsAfter-1 {Second is  after first}  -constraints {}  -setup {}  -body {TimeOfDayIsAfter 01:00:00 01:02:03
}  -cleanup {}  -result {0}  -output {}  -returnCodes {0}  

}



proc TimeOfDayIsAfterTest::Test-3 {} {

::tcltest::test TimeOfDayIsAfter-2 {First and second are equal}  -constraints {}  -setup {}  -body {TimeOfDayIsAfter 01:02:03 01:02:03
}  -cleanup {}  -result {0}  -output {}  -returnCodes {0}  

}



proc TimeOfDayIsAfterTest::Test-4 {} {

::tcltest::test TimeOfDayIsAfter-3 {First is invalid}  -constraints {}  -setup {}  -body {TimeOfDayIsAfter asdf 01:02:03
}  -cleanup {}  -result {Variable FirstTimeOfDay has invalid value asdf.}  -output {}  -returnCodes {1}  

}



proc TimeOfDayIsAfterTest::Test-5 {} {

::tcltest::test TimeOfDayIsAfter-4 {Second is invalid}  -constraints {}  -setup {}  -body {TimeOfDayIsAfter 01:02:03 asdf
}  -cleanup {}  -result {Variable SecondTimeOfDay has invalid value asdf.}  -output {}  -returnCodes {1}  

}



proc TimeOfDayIsAfterTest::Test-6 {} {

::tcltest::test TimeOfDayIsAfter-5 {Use alternate format}  -constraints {}  -setup {}  -body {SetTimeOfDayFormat {{%I%M %p} -timezone :America/New_York -locale en_US}
TimeOfDayIsAfter {0102 PM} {0100 PM}
}  -cleanup {SetTimeOfDayFormat {%H:%M:%S}
}  -result {1}  -output {}  -returnCodes {0}  

}



if {([llength $::argv] == 0) || ([lindex $::argv 0] ne "target")} {
     TimeOfDayIsAfterTest::Test-1
     TimeOfDayIsAfterTest::Test-2
     TimeOfDayIsAfterTest::Test-3
     TimeOfDayIsAfterTest::Test-4
     TimeOfDayIsAfterTest::Test-5
     TimeOfDayIsAfterTest::Test-6
} else {
     foreach Element [lrange $::argv 1 end] {
          TimeOfDayIsAfterTest::Test-[set Element]
     }
}

